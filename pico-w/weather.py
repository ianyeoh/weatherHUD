import urequests as requests
import framebuf
import machine
import time
from json import loads


# Constants
API_URL = 'http://api.weatherapi.com/v1/current.json'
API_KEY = '' # Enter your API key here
CITY = '' # Enter your location here

# Weather icons
sun = framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x18\x00\x00\x00\x00\x18\x00\x00\x00\x00\x18\x00\x00\x00\x00\x18\x00\x00\x01\x00\x18\x00\x80\x01\x80\x18\x01\x80\x01\xc0\x00\x03\x80\x00\xe0\x00\x07\x00\x00p\x00\x0e\x00\x00 \xff\x04\x00\x00\x03\xff\x80\x00\x00\x07\xff\xe0\x00\x00\x07\xff\xf0\x00\x00\x0f\xff\xf0\x00\x00\x1f\xff\xf8\x00\x00\x1f\xff\xf8\x00\x00\x1f\xff\xf8\x00?\x1f\xff\xf8\xfe\x7f\x1f\xff\xf8\xfc\x00\x1f\xff\xf8\x00\x00\x1f\xff\xf8\x00\x00\x1f\xff\xf8\x00\x00\x0f\xff\xf0\x00\x00\x0f\xff\xf0\x00\x00\x07\xff\xc0\x00\x00\x01\xff\xc0\x00\x00 \xff\x04\x00\x00p\x00\x0e\x00\x00\xe0\x00\x07\x00\x01\xc0\x00\x03\x80\x01\x80\x18\x01\x80\x01\x00\x18\x00\x80\x00\x00\x18\x00\x00\x00\x00\x18\x00\x00\x00\x00\x18\x00\x00\x00\x00\x18\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00'), 40, 40, framebuf.MONO_HLSB)
moon = framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x1e\x00\x00\x00\x00<\x00\x00\x00\x00|\x00\x00\x00\x00\xf8\x00\x00\x00\x01\xf8\x00\x00\x00\x01\xf8\x00\x00\x00\x03\xf8\x00\x00\x00\x07\xf8\x00\x00\x00\x07\xf8\x00\x00\x00\x07\xfc\x00\x00\x00\x0f\xfc\x00\x00\x00\x0f\xfc\x00\x00\x00\x0f\xfe\x00\x00\x00\x0f\xfe\x00\x00\x00\x0f\xff\x00\x00\x00\x0f\xff\x80\x00\x00\x0f\xff\x80\x00\x00\x0f\xff\xc0\x00\x00\x07\xff\xf0\x00\x00\x07\xff\xf8\x00\x00\x07\xff\xfe\x00\x00\x03\xff\xff\x80\x00\x03\xff\xff\xff\x80\x01\xff\xff\xff\x80\x00\xff\xff\xff\x00\x00\x7f\xff\xfe\x00\x00?\xff\xfc\x00\x00\x1f\xff\xf8\x00\x00\x07\xff\xe0\x00\x00\x00\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'), 40, 40, framebuf.MONO_HLSB)
cloud = framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xe0\x00\x00\x00?\xf8\x00\x00\x00\xff\xfc\x00\x00\x01\xff\xfe\x00\x00\x01\xff\xff\x00\x00\xfb\xff\xff\x00\x01\xff\xff\xff\x80\x03\xff\xff\xff\x80\x07\xff\xff\xff\xc0\x07\xff\xff\xff\xc0\x0f\xff\xff\xff\xe0\x1f\xff\xff\xff\xf0?\xff\xff\xff\xfc\x7f\xff\xff\xff\xfe\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\xfe\x7f\xff\xff\xff\xfe?\xff\xff\xff\xfc\x1f\xff\xff\xff\xf8\x07\xff\xff\xff\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'), 40, 40, framebuf.MONO_HLSB)
rain = framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xf8\x00\x00\x00\x07\xfe\x00\x00\x00\x0f\xff\x00\x00\x00\x1f\xff\x80\x00\x00\x1f\xff\x80\x00\x00?\xff\xc0\x00\x00?\xff\xff\x00\x00?\xff\xff\xc0\x00\x7f\xff\xff\xe0\x01\xff\xff\xff\xf0\x07\xff\xff\xff\xf0\x0f\xff\xff\xff\xf8\x0f\xff\xff\xff\xf8\x0f\xff\xff\xff\xf8\x1f\xff\xff\xff\xf8\x1f\xff\xff\xff\xf0\x1f\xff\xff\xff\xf0\x0f\xff\xff\xff\xf0\x0f\xff\xff\xff\xe0\x07\xff\xff\xff\xc0\x03\xff\xff\xff\x80\x00\x7f\x81\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x008\x00\x00\x00`p`\x00\x00\xe0\xe0\xe0\x00\x01\xc1\xc1\xc0\x00\x03\x83\x83\x80\x00\x07\x03\x07\x00\x00\x06\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'), 40, 40, framebuf.MONO_HLSB)
lightning = framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x03\xff\xc0\x00\x00\x0f\xff\xe0\x00\x00\x1f\xff\xf8\x00\x00\x1f\xff\xf8\x00\x00?\xff\xfc\x00\x00\x7f\xff\xfe\x00\x03\xff\xff\xfe\x00\x0f\xff\xff\xff\x00\x1f\xff\xff\xff\x00?\xff\xff\xff\xc0\x7f\xff\xff\xff\xf0\x7f\xff\xff\xff\xfc\x7f\xff\xf8\x7f\xfc\xff\xff\xe0~\x1e\xff\xff\xe0|\x0e\xff\xff\xc0x\x0f\xff\xff\x84xG\xff\xff\x0cp\xc7\xff\xff\x0ca\xc7\xff\xfe\x1c\x01\xc0\x7f\xfc<\x03\xc0?\xfc<\x07\xc0\x1f\xf8\x7f\xe7\xfc\x0f\xf8\xff\xcf\xfc\x07\xf0\xff\x8f\xf8\x01\xe0\xff\x9f\xf0\x00\x00\x0f\x01\xf0\x00\x00\x0e\x01\xe0\x00\x00\x0e\x01\xc0\x00\x00\x0c\x01\xc0\x00\x00\x08\x01\x80\x00\x00\x08\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'), 40, 40, framebuf.MONO_HLSB)

# Other icons
thermometer = framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xf8\x00\x00\x00\x03\xfc\x00\x00\x00\x07\x0e\x00\x00\x00\x07\x0e~\x00\x00\x06\x06~\x00\x00\x06\x06\x00\x00\x00\x06\x06\x00\x00\x00\x06\x06\x00\x00\x00\x06\x06~\x00\x00\x06\x06~\x00\x00\x06\x06\x00\x00\x00\x06\x06\x00\x00\x00\x06\x06\x00\x00\x00\x06f~\x00\x00\x06f~\x00\x00\x06f\x00\x00\x00\x06f\x00\x00\x00\x06f\x00\x00\x00\x06f~\x00\x00\x06f~\x00\x00\x06f\x00\x00\x00\x0eg\x00\x00\x00\x1eg\x80\x00\x00<c\xc0\x00\x008\xf1\xc0\x00\x00q\xf8\xe0\x00\x00s\xfc\xe0\x00\x00s\xfc\xe0\x00\x00s\xfc\xe0\x00\x00s\xfc\xe0\x00\x00q\xf8\xe0\x00\x008\xf1\xc0\x00\x00<\x03\xc0\x00\x00\x1e\x07\x80\x00\x00\x0f\xff\x00\x00\x00\x03\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'), 40, 40, framebuf.MONO_HLSB)
wind = framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x7f\x00\x00\x00\x00\xe7\x00\x00\x00\x00\xc3\x80\x00\x00\x00\x83\x80\x00\x00\x00\x03\x80\x00\x00\x00\x03\x03\xc0\x03\xff\xff\x0f\xe0\x1f\xff\xfe\x1cp\x1f\x00\x0088\x00\x00\x0008\x00\x00\x00 \x18\x00\x00\x00\x00\x18\x01\xff\xe0\x00\x18\x0f\xff\xff\x008\x1f\x80\x7f\xe0\xf0\x18\x00\x03\xff\xe0\x00\x00\x00\x7f\x80\x00\x00\x00\x00\x00\x00\xff\xe0\x00\x00\x0f\xff\xf8\x00\x00\x1f\x80~\x00\x00\x1c\x00\x0f\x00\x00\x00\x00\x03\x00\x00\x00\x00\x83\x00\x00\x00\x00\xc3\x00\x00\x00\x00\xc3\x00\x00\x00\x00\xf7\x00\x00\x00\x00~\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'), 40, 40, framebuf.MONO_HLSB)
raindrop = framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x008\x00\x00\x00\x00<\x00\x00\x00\x00~\x00\x00\x00\x00\xff\x00\x00\x00\x00\xff\x00\x00\x00\x01\xff\x80\x00\x00\x03\xff\xc0\x00\x00\x03\xff\xc0\x00\x00\x07\xff\xe0\x00\x00\x0f\xff\xe0\x00\x00\x0f\xff\xf0\x00\x00\x0f\xff\xf8\x00\x00\x1f\xff\xf8\x00\x00?\xff\xf8\x00\x00?\xff\xfc\x00\x00?\xff\xfe\x00\x00\x7f\xff\xfe\x00\x00\x7f\xff\xfe\x00\x00\xff\xff\xfe\x00\x00\xff\xff\xff\x00\x00\xff\xff\xff\x00\x00\xff\xff\xdf\x00\x00\xff\xff\xdf\x00\x00\xff\xff\x9f\x00\x00\xff\xff\x9f\x00\x00\xff\xff\x9f\x00\x00\x7f\xff>\x00\x00\x7f\xfe~\x00\x00\x7f\xe0~\x00\x00?\xe3\xfc\x00\x00\x1f\xff\xf8\x00\x00\x0f\xff\xf0\x00\x00\x07\xff\xe0\x00\x00\x03\xff\x80\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'), 40, 40, framebuf.MONO_HLSB)

# Code to weather icon mapping
def getIconFromCode(code, dt):
    weather = [
        ('clear', [1000]),
        (cloud, [1003, 1006, 1009, 1030, 1135, 1147]),
        (rain, [1063, 1066, 1069, 1072, 1150, 1153, 1171, 1168, 1180, 1183, 1186, 1189, 1192, 1195, 1198, 1201, 1204, 1207, 1210, 1213, 1216, 1219, 1222, 1225, 1237, 1240, 1243, 1249, 1252, 1255, 1258, 1261, 1264]),
        (lightning, [1087, 1114, 1117, 1276, 1246, 1273, 1279, 1282])
        ]
    
    # Split 24 hr time to only the hour component
    hour = int(dt.split()[1].split(':')[0])
    
    icon = None
    for w in weather:
        if code in w[1]:
            icon = w[0]
            break
    
    if icon == 'clear':
        if hour >= 18 or hour <= 6:
            icon = moon
        else:
            icon = sun
            
    return icon

def encodeURLParams(url, url_params):
    url = f'{url}?'
    for key, value in url_params.items():
        url = f'{url}&{key}={value}'
    return url

def getPicoTemp():
    temp_sensor = machine.ADC(4)
    # 16-bit temperature reading to volts
    reading = temp_sensor.read_u16() * ( 3.3 / (65535) )
    # Convert volts to Celsius
    return int(round(27 - (reading - 0.706)/0.001721, 0))

def getWeatherData():
    url_params = {
        'key': API_KEY,
        'q': CITY,
        'aqi': 'no'
    }
    
    url = encodeURLParams(API_URL, url_params)
    res = requests.get(url=url, timeout=10).text
    d = loads(res)
    
    localtime = d['location']['localtime'].split()
    dt = d['location']['localtime']
    
    return {
        'icon': getIconFromCode(d['current']['condition']['code'], dt),
        'condition': d['current']['condition']['text'],
        'location': d['location']['name'],
        'pico_temp_c': getPicoTemp(),
        'temp_c': int(round(d['current']['temp_c'], 0)),
        'wind_kph': int(round(d['current']['wind_kph'])),
        'wind_dir': d['current']['wind_dir'],
        'precip_mm': int(round(d['current']['precip_mm'])),
        'humidity': d['current']['humidity'],
        'feelslike_c': int(round(d['current']['feelslike_c']))
        }